import asyncio
from llm.local_search import DeepSeekService
from llm.prompt_templates import EXTRACT_DATA_DRAW_COLUMN_DIVISION_PROMPT
from drawings.draw_column_division import draw_column_division_with_json_input
from utils.parse_json_response import parse_json_response

async def main():
    TYPE_EXERCISE = "T√≠nh"
    QUESTION = "(10ƒë) Ph√©p chia n√†o sai. ƒê√°p √°n: C"
    DETAIL ="""   
    H√¨nh ·∫£nh A: ƒê·∫∑t t√≠nh ph√©p chia s·ªë b·ªã chia 34 568 v√† s·ªë chia l√† 6. Th∆∞∆°ng l√† 5 761
    Ta vi·∫øt s·ªë b·ªã chia 34 568 ti·∫øp theo k·∫ª 1 ƒë∆∞·ªùng k·∫ª d·ªçc v√† 1 ƒë∆∞·ªùng k·∫ª ngang chia √¥ s·ªë chia v√† √¥ th∆∞∆°ng. Vi·∫øt 6 v√†o √¥ s·ªë chia; vi·∫øt 5 761 v√†o √¥ th∆∞∆°ng
    √î s·ªë b·ªã chia: d√≤ng 1: vi·∫øt ‚Äú34 568‚Äù, d√≤ng 2 vi·∫øt s·ªë 45 th·∫≥ng h√†ng v·ªõi s·ªë 4 v√† s·ªë 5 ·ªü s·ªë b·ªã chia. d√≤ng 3: s·ªë 36 th·∫≥ng h√†ng v·ªõi ch·ªØ s·ªë 56 c·ªßa s·ªë b·ªã chia; d√≤ng 4 s·ªë 08 th·∫≥ng h√†ng v·ªõi ch·ªØ s·ªë 68 c·ªßa s·ªë b·ªã chia. d√≤ng 5: s·ªë 2 th·∫≥ng h√†ng v·ªõi ch·ªØ s·ªë 8 c·ªßa s·ªë b·ªã chia
    D√≤ng 6: 34 568 : 6 = 5 761 (d∆∞ 2)

    H√¨nh ·∫£nh B: ƒê·∫∑t t√≠nh ph√©p chia s·ªë b·ªã chia 178 675 v√† s·ªë chia l√† 5. Th∆∞∆°ng l√† 35 735
    Ta vi·∫øt s·ªë b·ªã chia 178 675 ti·∫øp theo k·∫ª 1 ƒë∆∞·ªùng k·∫ª d·ªçc v√† 1 ƒë∆∞·ªùng k·∫ª ngang chia √¥ s·ªë chia v√† √¥ th∆∞∆°ng. Vi·∫øt 5 v√†o √¥ s·ªë chia; vi·∫øt 35 735 v√†o √¥ th∆∞∆°ng.
    √î s·ªë b·ªã chia:

    D√≤ng 1: vi·∫øt "178 675"
    D√≤ng 2: vi·∫øt s·ªë 28 th·∫≥ng h√†ng v·ªõi s·ªë 7 v√† s·ªë 8 ·ªü s·ªë b·ªã chia
    D√≤ng 3: s·ªë 36 th·∫≥ng h√†ng v·ªõi ch·ªØ s·ªë 86 c·ªßa s·ªë b·ªã chia
    D√≤ng 4: s·ªë 17 th·∫≥ng h√†ng v·ªõi ch·ªØ s·ªë 67 c·ªßa s·ªë b·ªã chia
    D√≤ng 5: s·ªë 25 th·∫≥ng h√†ng v·ªõi ch·ªØ s·ªë 75 c·ªßa s·ªë b·ªã chia
    D√≤ng 6: s·ªë 0 th·∫≥ng h√†ng v·ªõi ch·ªØ s·ªë 5 c·ªßa s·ªë b·ªã chia

    D√≤ng 7: 178 675 : 5 = 35 735

    H√¨nh ·∫£nh C: ƒê·∫∑t t√≠nh ph√©p chia s·ªë b·ªã chia 77 965 v√† s·ªë chia l√† 6. Th∆∞∆°ng l√† 1 299
    Ta vi·∫øt s·ªë b·ªã chia 77 965 ti·∫øp theo k·∫ª 1 ƒë∆∞·ªùng k·∫ª d·ªçc v√† 1 ƒë∆∞·ªùng k·∫ª ngang chia √¥ s·ªë chia v√† √¥ th∆∞∆°ng. Vi·∫øt 6 v√†o √¥ s·ªë chia; vi·∫øt 1 299 v√†o √¥ th∆∞∆°ng.
    √î s·ªë b·ªã chia:

    D√≤ng 1: vi·∫øt "77 965"
    D√≤ng 2: vi·∫øt s·ªë 17 th·∫≥ng h√†ng v·ªõi s·ªë 7 v√† s·ªë 7 ·ªü s·ªë b·ªã chia
    D√≤ng 3: s·ªë 59 th·∫≥ng h√†ng v·ªõi ch·ªØ s·ªë 79 c·ªßa s·ªë b·ªã chia
    D√≤ng 4: s·ªë 56 th·∫≥ng h√†ng v·ªõi ch·ªØ s·ªë 96 c·ªßa s·ªë b·ªã chia
    D√≤ng 5: s·ªë 25 th·∫≥ng h√†ng v·ªõi ch·ªØ s·ªë 65 c·ªßa s·ªë b·ªã chia

    D√≤ng 6: 77 965 : 6 = 1 299 (d∆∞ 25)
    """
    prompt = EXTRACT_DATA_DRAW_COLUMN_DIVISION_PROMPT.format(
        type_exercise=TYPE_EXERCISE,
        question=QUESTION,
        detail=DETAIL
    )

    service = DeepSeekService()

    print("\n" + "=" * 60)
    print("ü§ñ DeepSeek Interactive Mode")
    print("=" * 60)
    
    json_mode = True  # M·∫∑c ƒë·ªãnh b·∫≠t JSON mode
    
    try:
        print(f"\nüìù JSON Mode: {'ON' if json_mode else 'OFF'}")

        response = await service.generate_message(prompt, is_json_mode=json_mode)
        
        print("\n" + "=" * 60)
        print("ü§ñ LLM Response:")
        print("-" * 60)
        
        print(response)
        if json_mode:
             # ‚úÖ Parse JSON v·ªõi auto-fix
            parsed = parse_json_response(response)
            
            if parsed is None:
                print(f"‚ùå Invalid JSON - Cannot parse")
                print(f"Raw response: {response}")
                return
            
            # ‚úÖ V·∫Ω h√¨nh d·ª±a tr√™n JSON response (t·ª± ƒë·ªông x·ª≠ l√Ω dict ho·∫∑c list)
            print("\n" + "=" * 60)
            draw_column_division_with_json_input(parsed, output_file='column_division_output.png')
        else:
            print(response)
        
        print("=" * 60)
        
    except Exception as e:
        print(f"\n‚ùå Error: {str(e)}")
    
    finally:
        await service.close_session()
        print("\n‚úÖ Session closed")

if __name__ == "__main__":
    asyncio.run(main())